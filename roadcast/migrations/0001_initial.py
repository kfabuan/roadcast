# Generated by Django 3.2 on 2021-10-22 10:26

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc
import roadcast.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='refcitymun',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('psgcCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Code')),
                ('citymunDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='City')),
                ('regDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='Region')),
                ('provCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Province Code')),
                ('citymunCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='City Code')),
            ],
        ),
        migrations.CreateModel(
            name='refprovince',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('psgcCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Code')),
                ('provDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='Province')),
                ('regCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Region Code')),
                ('provCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Province Code')),
            ],
        ),
        migrations.CreateModel(
            name='refregion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('psgcCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Code')),
                ('regDesc', models.CharField(blank=True, max_length=200, null=True, verbose_name='Region')),
                ('regCode', models.CharField(blank=True, max_length=200, null=True, verbose_name='Region Code')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_add_departments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Dept_Dept', models.CharField(blank=True, max_length=200, verbose_name='Department')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_add_members',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('Members_District', models.CharField(blank=True, max_length=200, null=True, verbose_name='Members District')),
                ('Members_Fname', models.CharField(blank=True, max_length=200, null=True, verbose_name='First Name')),
                ('Members_Lname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Last Name')),
                ('Members_Email', models.EmailField(blank=True, max_length=200, null=True, verbose_name='Email')),
                ('Members_Username', models.CharField(blank=True, max_length=200, null=True, verbose_name='Username')),
                ('Members_Password', models.CharField(blank=True, max_length=200, null=True, verbose_name='Password')),
                ('Date_Added', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Date Added')),
                ('Added_By', models.CharField(blank=True, max_length=200, null=True, verbose_name='Added By')),
                ('Members_Pic', models.ImageField(blank=True, default='Profile/default.jpg', null=True, upload_to=roadcast.models.image_path)),
                ('Edit_By', models.CharField(blank=True, default='Have not been edited yet', max_length=200, null=True, verbose_name='Edit By')),
                ('Date_Edit', models.DateField(blank=True, null=True, verbose_name='Date Added')),
                ('Members_Dept', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_add_departments')),
            ],
        ),
        migrations.CreateModel(
            name='tbl_audit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(blank=True, max_length=50, null=True)),
                ('password', models.CharField(blank=True, max_length=50, null=True)),
                ('date_logged_in', models.DateTimeField(auto_now_add=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_barangay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Barangay', models.CharField(blank=True, max_length=200, verbose_name='Barangay')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_district',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('District', models.CharField(blank=True, choices=[('District 1', 'District 1'), ('District 2', 'District 2')], max_length=200, verbose_name='District')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_forecast',
            fields=[
                ('Date', models.DateField(blank=True, max_length=200, primary_key=True, serialize=False, verbose_name='Dates')),
                ('Incidents', models.PositiveIntegerField(blank=True, verbose_name='Incidents')),
                ('Averages', models.FloatField(blank=True, max_length=200, null=True, verbose_name='Averages')),
            ],
        ),
        migrations.CreateModel(
            name='tbl_genpub_users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gen_surname', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_fname', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_sex', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_bday', models.DateField(blank=True, null=True)),
                ('gen_barangay', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_contact_no', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_username', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_pass', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_valid_id', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_upload_id', models.ImageField(blank=True, default='Public/default.jpg', null=True, upload_to=roadcast.models.image_path2)),
                ('gen_profile', models.ImageField(blank=True, default='Public/default.jpg', null=True, upload_to=roadcast.models.image_path2)),
                ('date_signed_up', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_edit', models.DateField(blank=True, null=True)),
                ('gen_qa', models.CharField(blank=True, max_length=50, null=True)),
                ('gen_qa_answer', models.CharField(blank=True, max_length=50, null=True)),
                ('Read_Status', models.CharField(blank=True, max_length=200, verbose_name='Read')),
                ('is_verified', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('gen_city', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.refcitymun')),
                ('gen_province', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.refprovince')),
                ('gen_region', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.refregion')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_member_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Member_Type', models.CharField(blank=True, choices=[('Admin', 'Admin'), ('Crime Statistician', 'Crime Statistician'), ('Sub-representative', 'Sub-representative'), ('Investigator', 'Investigator')], max_length=200, verbose_name='MemberType')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_position',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Position', models.CharField(blank=True, choices=[('NUP', 'NUP'), ('Pat', 'Pat'), ('PCpl', 'PCpl'), ('PSSg', 'PSSg'), ('PMGSg', 'PMGSg'), ('PSMSg', 'PSMSg'), ('PCMSg', 'PCMSg'), ('PEMSg', 'PEMSg'), ('PLT', 'PLT'), ('PCAP', 'PCAP'), ('PMAJ', 'PMAJ'), ('PLTCOL', 'PLTCOL'), ('PCOL', 'PCOL'), ('PBGEN', 'PBGEN'), ('PMGEN', 'PMGEN'), ('PLTGEN', 'PLTGEN'), ('PGEN', 'PGEN')], max_length=200, verbose_name='Position')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_public_report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Reported_City', models.CharField(blank=True, max_length=200, verbose_name='City:')),
                ('Reported_District', models.CharField(blank=True, max_length=200, verbose_name='District')),
                ('Reported_Location', models.CharField(blank=True, max_length=200, verbose_name='Location')),
                ('Reported_Latitude', models.CharField(blank=True, max_length=200, verbose_name='Latitude')),
                ('Reported_Longitude', models.CharField(blank=True, max_length=200, verbose_name='Longitude')),
                ('Reported_Along', models.CharField(blank=True, max_length=200, verbose_name='Along')),
                ('Reported_Corner', models.CharField(blank=True, max_length=200, verbose_name='Corner')),
                ('Reported_Narrative', models.CharField(blank=True, max_length=800, verbose_name='Narrative')),
                ('Reported_Image_Proof', models.ImageField(blank=True, upload_to=roadcast.models.image_path_incident_report, verbose_name='Proof of Incident')),
                ('Reported_Date', models.DateField(blank=True, default=datetime.datetime(2021, 10, 22, 10, 26, 41, 414690, tzinfo=utc), verbose_name='Date Reported')),
                ('Reported_Time', models.TimeField(blank=True, default=datetime.datetime(2021, 10, 22, 10, 26, 41, 414690, tzinfo=utc), verbose_name='Time Reported')),
                ('Recipient', models.CharField(blank=True, max_length=200, verbose_name='Recipient')),
                ('Read_Status', models.CharField(blank=True, max_length=200, verbose_name='Read by Admin')),
                ('Read_by_subrep', models.CharField(blank=True, default='No', max_length=200, verbose_name='Read by Subrep')),
                ('Read_by_encoder', models.CharField(blank=True, default='No', max_length=200, verbose_name='Read by Encoder')),
                ('Report_Status', models.CharField(blank=True, default='Unsolved', max_length=200, verbose_name='Report Status')),
                ('Assigned_Investigator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_add_members')),
                ('Reported_Brgy', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_barangay')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_substation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Substation', models.CharField(blank=True, choices=[('PNP-Pasig', 'PNP-Pasig'), ('Substation 1', 'Substation 1'), ('Substation 2', 'Substation 2'), ('Substation 3', 'Substation 3'), ('Substation 4', 'Substation 4'), ('Substation 5', 'Substation 5'), ('Substation 6', 'Substation 6'), ('Substation 7', 'Substation 7'), ('Substation 8', 'Substation 8')], max_length=200, verbose_name='Substation')),
            ],
        ),
        migrations.CreateModel(
            name='Tbl_public_report_response',
            fields=[
                ('Response_id', models.AutoField(primary_key=True, serialize=False)),
                ('Sender_Type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Sender Type')),
                ('Sender', models.IntegerField(blank=True, null=True, verbose_name='Sender')),
                ('Receiver', models.IntegerField(blank=True, null=True, verbose_name='Receiver')),
                ('Response', models.CharField(blank=True, max_length=200, null=True, verbose_name='Response')),
                ('Response_Date', models.DateField(blank=True, default=datetime.datetime(2021, 10, 22, 10, 26, 41, 414690, tzinfo=utc), null=True, verbose_name='Response Date')),
                ('Response_Time', models.TimeField(blank=True, default=datetime.datetime(2021, 10, 22, 10, 26, 41, 414690, tzinfo=utc), null=True, verbose_name='Response Time')),
                ('Read_Status', models.CharField(blank=True, default='No', max_length=200, null=True, verbose_name='Read')),
                ('Report', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Report_id', to='roadcast.tbl_public_report')),
            ],
        ),
        migrations.AddField(
            model_name='tbl_public_report',
            name='Substation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Substation_id', to='roadcast.tbl_substation'),
        ),
        migrations.AddField(
            model_name='tbl_public_report',
            name='User_ID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_genpub_users'),
        ),
        migrations.CreateModel(
            name='Tbl_pasig_incidents',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('City', models.CharField(blank=True, max_length=200, null=True, verbose_name='City')),
                ('UnitStation', models.CharField(blank=True, max_length=200, null=True, verbose_name='Unit/Station')),
                ('CrimeOffense', models.CharField(blank=True, choices=[('Physical Injury', 'Physical Injury'), ('Self Accident', 'Self Accident'), ('Homicide', 'Homicide'), ('Damage to Property', 'Damage to Property')], max_length=200, null=True, verbose_name='Crime/Offense')),
                ('Week', models.IntegerField(blank=True, null=True, verbose_name='Week')),
                ('Date', models.DateField(blank=True, max_length=200, null=True, verbose_name='Date')),
                ('Time', models.TimeField(blank=True, null=True, verbose_name='Time')),
                ('Day', models.CharField(blank=True, max_length=200, null=True, verbose_name='Day')),
                ('Incident_Type', models.CharField(blank=True, choices=[('Angle Collision', 'Angle Collision'), ('Bumped From Behind', 'Bumped From Behind'), ('Clash', 'Clash'), ('Damage to Property', 'Damage to Property'), ('Head On', 'Head On'), ('Hit and Run', 'Hit and Run'), ('Hit Animals', 'Hit Animals'), ('Hit Object On Road', 'Hit Object On Road'), ('Hit Object Off Road', 'Hit Object Off Road'), ('Hit Parked Vehicle', 'Hit Parked Vehicle'), ('Hit Pedestrian', 'Hit Pedestrian'), ('Hit While Parked', 'Hit While Parked'), ('Multi Vehicle', 'Multi Vehicle'), ('Rear End', 'Rear End'), ('Self Accident', 'Self Accident'), ('Impact', 'Impact'), ('Sideswiped', 'Sideswiped'), ('Side Impact', 'Side Impact'), ('Right Angle', 'Right Angle'), ('Others', 'Others')], max_length=200, null=True, verbose_name='Incident Type')),
                ('Number_of_Persons_Involved', models.IntegerField(blank=True, null=True, verbose_name='# of Persons Involved')),
                ('Light', models.CharField(blank=True, choices=[('Daylight', 'Daylight'), ('Night', 'Night')], max_length=200, null=True, verbose_name='Light')),
                ('Weather', models.CharField(blank=True, choices=[('Sun', 'Sun'), ('Fair', 'Fair'), ('Light Rain', 'Light Rain'), ('Rainy', 'Rainy'), ('Wind', 'Wind')], max_length=200, null=True, verbose_name='Weather')),
                ('Case_Status', models.CharField(blank=True, choices=[('Solved', 'Solved'), ('Unsolved', 'Unsolved')], max_length=200, null=True, verbose_name='Case Status')),
                ('Address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Address')),
                ('Along', models.CharField(blank=True, max_length=200, null=True, verbose_name='Along')),
                ('Corner', models.CharField(blank=True, max_length=200, null=True, verbose_name='Corner')),
                ('Latitude', models.CharField(blank=True, max_length=200, null=True, verbose_name='Latitude')),
                ('Longitude', models.CharField(blank=True, max_length=200, null=True, verbose_name='Longitude')),
                ('Surface_Condition', models.CharField(blank=True, choices=[('Dry', 'Dry'), ('Wet', 'Wet'), ('Sand', 'Sand')], max_length=200, null=True, verbose_name='Surface Condition')),
                ('Surface_Type', models.CharField(blank=True, choices=[('Asphalt', 'Asphalt'), ('Concrete', 'Concrete'), ('Soil', 'Soil')], max_length=200, null=True, verbose_name='Surface Type')),
                ('Road_Repair', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=200, null=True, verbose_name='Road Repair')),
                ('Hit_and_Run', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=200, null=True, verbose_name='Hit and Run')),
                ('Road_Character', models.CharField(blank=True, choices=[('Straight Flat', 'Straight Flat'), ('Straight Incline', 'Straight Incline'), ('Curve', 'Curve'), ('Curve Incline', 'Curve Incline'), ('Upwards', 'Upwards'), ('Downwards', 'Downwards')], max_length=200, null=True, verbose_name='Road Character')),
                ('Suspect_Type', models.CharField(blank=True, choices=[('Driver', 'Driver'), ('Passenger', 'Passenger'), ('Pedestrian', 'Pedestrian')], max_length=200, null=True, verbose_name='Suspect Type')),
                ('Suspect_Fname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect First Name')),
                ('Suspect_Lname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Last Name')),
                ('Suspect_Severity', models.CharField(blank=True, choices=[('Unharmed', 'Unharmed'), ('Harmed', 'Harmed'), ('Injured', 'Injured'), ('Self Accident', 'Self Accident'), ('Deceased', 'Deceased'), ('Not Interested to Report', 'Not Interested to Report'), ('Arrested', 'Arrested'), ('Escaped', 'Escaped'), ('Unidentified', 'Unidentified')], max_length=200, null=True, verbose_name='Suspect Severity')),
                ('Suspect_Age', models.IntegerField(blank=True, null=True, verbose_name='Suspect Age')),
                ('Suspect_Sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=200, null=True, verbose_name='Suspect Sex')),
                ('Suspect_Civil_Status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Divorced', 'Divorced')], max_length=200, null=True, verbose_name='Suspect Civil_Status')),
                ('Suspect_Address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Address')),
                ('Suspect_Vehicle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Vehicle')),
                ('Suspect_Vehicle_Body_Type', models.CharField(blank=True, choices=[('Armored Car', 'Armored Car'), ('Alto', 'Alto'), ('Bicycle', 'Bicycle'), ('Private Bus', 'Private Bus'), ('PUB - Public Utility Bus', 'PUB - Public Utility Bus'), ('Cab Chassis', 'Cab Chassis'), ('Coupe', 'Coupe'), ('Electric Bike', 'Electric Bike'), ('Jitney', 'Jitney'), ('Hatchback', 'Hatchback'), ('Motorcycle', 'Motorcycle'), ('MTC/MC', 'MTC/MC'), ('Object', 'Object'), ('Pedicab', 'Pedicab'), ('PUJ/PUB/PUV - (Public Utility Bus/Public Utility Jeep/Public Utility Vehicle)', 'PUJ/PUB/PUV - (Public Utility Bus/Public Utility Jeep/Public Utility Vehicle)'), ('PUJ - Public Utility Jeep', 'PUJ - Public Utility Jeep'), ('PUV- Public Utility Vehicle', 'PUV- Public Utility Vehicle'), ('Sedan', 'Sedan'), ('S-CUV', 'S-CUV'), ('Shuttle', 'Shuttle'), ('SUV', 'SUV'), ('Tricycle', 'Tricycle'), ('Train', 'Train'), ('Truck', 'Truck'), ('Trailer', 'Trailer'), ('Unidentified', 'Unidentified'), ('Pick-Up', 'Pick-Up'), ('Minivan', 'Minivan'), ('Van', 'Van'), ('Wagon', 'Wagon'), ('Cart', 'Cart'), ('Modern Jeepney', 'Modern Jeepney'), ('Others', 'Others')], max_length=200, null=True, verbose_name='Suspect Vehicle_Body_Type')),
                ('Suspect_Plate_No', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Plate_No')),
                ('Suspect_Reg_Owner', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Reg_Owner')),
                ('Suspect_Drl_No', models.CharField(blank=True, max_length=200, null=True, verbose_name='Suspect Drl_No')),
                ('Suspect_Drl_Exp', models.DateField(blank=True, max_length=200, null=True, verbose_name='Suspect Drl Exp Date')),
                ('Victim_Type', models.CharField(blank=True, choices=[('Driver', 'Driver'), ('Passenger', 'Passenger'), ('Pedestrian', 'Pedestrian')], max_length=200, null=True, verbose_name='Victim Type')),
                ('Victim_Fname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim First Name')),
                ('Victim_Lname', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Last Name')),
                ('Victim_Severity', models.CharField(blank=True, choices=[('Unharmed', 'Unharmed'), ('Harmed', 'Harmed'), ('Injured', 'Injured'), ('Self Accident', 'Self Accident'), ('Deceased', 'Deceased'), ('Not Interested to Report', 'Not Interested to Report'), ('Arrested', 'Arrested'), ('Escaped', 'Escaped'), ('Unidentified', 'Unidentified')], max_length=200, null=True, verbose_name='Victim Severity')),
                ('Victim_Age', models.IntegerField(blank=True, null=True, verbose_name='Victim Age')),
                ('Victim_Sex', models.CharField(blank=True, choices=[('Male', 'Male'), ('Female', 'Female')], max_length=200, null=True, verbose_name='Victim Sex')),
                ('Victim_Civil_Status', models.CharField(blank=True, choices=[('Single', 'Single'), ('Married', 'Married'), ('Widowed', 'Widowed'), ('Separated', 'Separated'), ('Divorced', 'Divorced')], max_length=200, null=True, verbose_name='Victim Civil_Status')),
                ('Victim_Address', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Address')),
                ('Victim_Vehicle', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Vehicle')),
                ('Victim_Vehicle_Body_Type', models.CharField(blank=True, choices=[('Armored Car', 'Armored Car'), ('Alto', 'Alto'), ('Bicycle', 'Bicycle'), ('Private Bus', 'Private Bus'), ('PUB - Public Utility Bus', 'PUB - Public Utility Bus'), ('Cab Chassis', 'Cab Chassis'), ('Coupe', 'Coupe'), ('Electric Bike', 'Electric Bike'), ('Jitney', 'Jitney'), ('Hatchback', 'Hatchback'), ('Motorcycle', 'Motorcycle'), ('MTC/MC', 'MTC/MC'), ('Object', 'Object'), ('Pedicab', 'Pedicab'), ('PUJ/PUB/PUV - (Public Utility Bus/Public Utility Jeep/Public Utility Vehicle)', 'PUJ/PUB/PUV - (Public Utility Bus/Public Utility Jeep/Public Utility Vehicle)'), ('PUJ - Public Utility Jeep', 'PUJ - Public Utility Jeep'), ('PUV- Public Utility Vehicle', 'PUV- Public Utility Vehicle'), ('Sedan', 'Sedan'), ('S-CUV', 'S-CUV'), ('Shuttle', 'Shuttle'), ('SUV', 'SUV'), ('Tricycle', 'Tricycle'), ('Train', 'Train'), ('Truck', 'Truck'), ('Trailer', 'Trailer'), ('Unidentified', 'Unidentified'), ('Pick-Up', 'Pick-Up'), ('Minivan', 'Minivan'), ('Van', 'Van'), ('Wagon', 'Wagon'), ('Cart', 'Cart'), ('Modern Jeepney', 'Modern Jeepney'), ('Others', 'Others')], max_length=200, null=True, verbose_name='Victim Vehicle_Body_Type')),
                ('Victim_Plate_No', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Plate_No')),
                ('Victim_Reg_Owner', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Reg_Owner')),
                ('Victim_Drl_No', models.CharField(blank=True, max_length=200, null=True, verbose_name='Victim Drl_No')),
                ('Victim_Drl_Exp', models.DateField(blank=True, max_length=200, null=True, verbose_name='Victim Drl Exp Date')),
                ('Narrative', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Narrative')),
                ('date_added', models.DateField(blank=True, default=datetime.datetime(2021, 10, 22, 10, 26, 41, 414690, tzinfo=utc), null=True, verbose_name='Date Added')),
                ('added_by', models.CharField(blank=True, max_length=200, null=True, verbose_name='Added By')),
                ('archive', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], max_length=200, null=True, verbose_name='Archive')),
                ('read_status', models.CharField(blank=True, choices=[('Yes', 'Yes'), ('No', 'No')], default='No', max_length=200, null=True, verbose_name='Read')),
                ('Barangay_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_barangay')),
                ('District', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_district')),
                ('Investigator', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_add_members')),
            ],
        ),
        migrations.AddField(
            model_name='tbl_barangay',
            name='District_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_district'),
        ),
        migrations.AddField(
            model_name='tbl_add_members',
            name='Members_Position',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_position'),
        ),
        migrations.AddField(
            model_name='tbl_add_members',
            name='Members_Substation',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_substation'),
        ),
        migrations.AddField(
            model_name='tbl_add_members',
            name='Members_User',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='roadcast.tbl_member_type'),
        ),
    ]
